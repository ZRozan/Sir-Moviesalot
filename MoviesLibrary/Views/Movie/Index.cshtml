@model PagedList.IPagedList<MoviesLibrary.Models.Movie>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
<link href="~/Content/Custom/custom-movie-list.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Movies";
}

<h2>Movies</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

@using (Html.BeginForm("Index", "Movie", FormMethod.Get))
{
    <p>
        Find by movie title: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p>
}

<br />

<div class="row row-cols-auto d-flex justify-content-center">
    @foreach (var item in Model)
    {
        <div class="col-auto center" id="movie-item">
            <div class="container">
                <div class="card" style="width: 280px">
                    <div class="container" id="movie-image-hover">
                        <img src="@Html.DisplayFor(modelItem => item.Poster)"
                             class="image card-img-top px-1 py-1"
                             alt="..." />
                        <div class="middle" id="middle-title">
                            @Html.ActionLink("Edit", "Edit", new { id = item.Id })
                        </div>
                    </div>
                    <div class="card-body">
                        <h5 class="card-title text-center">@Html.DisplayFor(modelItem => item.MovieTitle)</h5>
                        <p class="card-text">@Html.DisplayFor(modelItem => item.Description)</p>
                    </div>
                    <ul class="list-group list-group-flush">
                        <li class="list-group-item">@Html.DisplayFor(modelItem => item.Directors)</li>
                        <li class="list-group-item">@Html.DisplayFor(modelItem => item.Duration) min</li>
                        <li class="list-group-item">
                            @{foreach (var genre in item.Genres)
                                {
                                    <span>-</span>
                                    @genre.GenreName
                                }
                            }
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    }
</div>

<br />
<br />

<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Title", "Index", new { sortOrder = ViewBag.TitleSort, currentFilter = ViewBag.Currentfilter })
        </th>
        <th>
            @Html.ActionLink("Release Year", "Index", new { sortOrder = ViewBag.ReleaseSort, currentFilter = ViewBag.Currentfilter })
        </th>
        <th>
            Duration
        </th>
        <th>
            ImDb Score
        </th>
        <th>
            MetaScore
        </th>
        <th>
            Description
        </th>
        <th>
            Genres
        </th>
        <th></th>
    </tr>

    @*@foreach (var item in Model)
    {
        <tr>
            <td>
                <p style="font-style:oblique; font-size:medium; text-align:center"><b>@Html.DisplayFor(modelItem => item.MovieTitle)</b></p>
                <img src=@Html.DisplayFor(modelItem => item.Poster)>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ReleaseYear)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Duration)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Imdbscore)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Metascore)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @{ foreach (var genre in item.Genres)
                    {
                        @genre.GenreName <br />
                    }
                }
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </td>
        </tr>
    }*@

</table>
<br />
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

    @Html.PagedListPager(Model, page => Url.Action("Index",
        new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
